{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAI3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAE5BC,YAAW,WACfH,EACFF,EAAS,CAACH,WAAUC,UAEpBG,EAAQ,CAACJ,WAAUC,S,GAEpBA,E,IAIPR,EAAKgB,iBAAiB,UACpB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIC,EAAaC,OAAOjB,EAAWkB,OAC7BC,EAAOF,OAAOhB,EAAUiB,OACxBE,EAASH,OAAOf,EAAYgB,OAEzBG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BlB,EAAckB,EAAE,EAAGL,GAAYM,MAAK,SAAAC,G,IAAEnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,M,OAChDV,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAC1DsB,OAAI,SAAAJ,G,IAAEnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,M,OACnBV,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAC1DW,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\";\n\nconst form = document.querySelector(\".form\");\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n// const createBtn = document.querySelector('button[type=\"submit\"]');\nlet timerId = null;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    timerId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve(({position, delay}));\n      } else {\n        reject(({position, delay}));\n      };\n    }, delay);\n  });\n  };\n\nform.addEventListener(\"submit\", onSubmitForm);\n  function onSubmitForm(event){\n    event.preventDefault();\n\n    let firstDelay = Number(delayInput.value);\n    const step = Number(stepInput.value);\n    const amount = Number(amountInput.value);\n\n    for (let i = 0; i < amount; i += 1) {\n      createPromise(i+1, firstDelay).then(({position, delay}) => \n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n      .catch(({position, delay}) =>\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      firstDelay += step;\n    };\n\n\n\n  };\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","firstDelay","Number","value","step","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.15129423.js.map"}