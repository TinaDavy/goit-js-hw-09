{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAApC,MACMC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAG3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAS,C,SAACH,E,MAAUC,IAEpBG,EAAQ,C,SAACJ,E,MAAUC,GAAQ,G,CATfP,SAASC,cAAc,yBAc/BY,iBAAiB,SACzB,SAAkBC,GAChBA,EAAMC,iBAEN,IAAIC,EAAaC,OAAOf,EAAWgB,OACnC,MAAMC,EAAOF,OAAOd,EAAUe,OACxBE,EAASH,OAAOb,EAAYc,OAE5BG,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGC,EAAIP,EAAYM,EAAIF,EAAQE,GAAK,EAAGC,GAAIJ,EACtDE,EAASG,KAAKnB,EAAciB,EAAE,EAAGC,IAEnCE,QAAQC,IAAIL,GAEZb,QAAQmB,WAAWN,GAAUO,MAAMC,IACjCA,EAAQC,SAASC,IACfN,QAAQC,IAAIK,GACZC,YAAW,KACTD,EAAOH,MAAK,EAACtB,SAACA,EAAQC,MAAEA,KACxBT,EAAAmC,OAAOC,QAAQ,uBAAqB5B,QAAiBC,SAAY4B,OAC9D,EAAK7B,WAASC,WACjBT,EAAAmC,OAAMG,QAAC,sBAAS9B,QAAgCC,QAAY,GAE9DS,GAAaG,EAAK,GAClB,IAKJM,QAAQC,IAAIV,GACZS,QAAQC,IAAIP,GACZM,QAAQC,IAAIN,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\";\n\nconst form = document.querySelector(\".form\");\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst createBtn = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve(({position, delay}));\n    } else {\n      reject(({position, delay}));\n    };\n  });\n  };\n\ncreateBtn.addEventListener(\"click\", onSubmit);\n  function onSubmit(event){\n    event.preventDefault();\n\n    let firstDelay = Number(delayInput.value);\n    const step = Number(stepInput.value);\n    const amount = Number(amountInput.value);\n\n    const promises = [];\n    for (let i = 0, j = firstDelay; i < amount; i += 1, j +=step) {\n      promises.push(createPromise(i+1, j));\n    };\n    console.log(promises)\n\n    Promise.allSettled(promises).then((results) => {\n      results.forEach((result) => {\n        console.log(result)\n        setTimeout(() => {\n          result.then(({position, delay}) =>\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n          .catch(({position, delay}) =>\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`))\n        },\n        firstDelay +=step)\n      });\n    });\n\n\n\n    console.log(firstDelay)\n    console.log(step)\n    console.log(amount)\n  };\n\n\n    \n\n        // Викликати ф-ю кріейт проміс емаунт разів\n    // кожен проміс викликати із затримкою делей та збільшенням затрики на степ мілісекунд\n    // перший проміс делей, 2-й - делей+степ і т.д.\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","Math","random","addEventListener","event","preventDefault","firstDelay","Number","value","step","amount","promises","i","j","push","console","log","allSettled","then","results","forEach","result","setTimeout","Notify","success","catch","failure"],"version":3,"file":"03-promises.5dfeff1f.js.map"}